Messages:
WARNING -> Coercing int to double in expression
	Div (Mul (IdVar "x") (IdVar "y")) (Const (CDouble 1.523))

WARNING -> Coercing int to double in expression
	Ret (Just (IdVar "z"))

WARNING -> Coercing int to double in expression
	Mul (IdVar "x") (Const (CDouble 39.42))

WARNING -> Coercing int to double in expression
	Mul (IdVar "x") (Const (CDouble 53.234))

ERROR -> Type checking not implemented for this expression in expression:
	Chamada "fun" [IdVar "x",IdVar "y"]

ERROR -> Unsuported types to assign in expression:
	Atrib "g" (Chamada "fun" [IdVar "x",IdVar "y"])

ERROR -> Type checking not implemented for this expression in expression:
	Chamada "fun" [IdVar "g",IdVar "x"]

ERROR -> Unsupported types to operate in expression:
	Div (Mul (IdVar "x") (IdVar "y")) (Chamada "fun" [IdVar "g",IdVar "x"])

ERROR -> Unsuported types to assign in expression:
	Atrib "f" (Div (Mul (IdVar "x") (IdVar "y")) (Chamada "fun" [IdVar "g",IdVar "x"]))

ERROR -> Type checking not implemented for this expression in expression:
	Chamada "opa" [IdVar "z",Mul (IdVar "f") (Const (CInt 3))]

ERROR -> Unsuported types to assign in expression:
	Atrib "f" (Chamada "opa" [IdVar "z",Mul (IdVar "f") (Const (CInt 3))])

ERROR -> varible "affers" not declared in expression:
	Atrib "affers" (Sub (Mul (Add (IdVar "f") (Div (IdVar "g") (IdVar "y"))) (Const (CInt 34))) (Mul (IdVar "x") (IdVar "f")))

ERROR -> varible "affers" not declared in expression:
	IdVar "affers"


AST: Prog ["fun" :->: (["x" :#: (TInt,0),"y" :#: (TInt,0)],TInt),"opa" :->: (["z" :#: (TString,0),"x" :#: (TInt,0)],TDouble)] [("fun",["x" :#: (TInt,0),"y" :#: (TInt,0),"z" :#: (TDouble,0)],[Atrib "z" (Div (IntDouble (Mul (IdVar "x") (IdVar "y"))) (Const (CDouble 1.523))),Ret (Just (IntDouble (IdVar "z")))]),("opa",["z" :#: (TString,0),"x" :#: (TInt,0),"y" :#: (TDouble,0),"aopa" :#: (TInt,0)],[If (Rel (Req (IdVar "z") (Lit "abc"))) [Atrib "y" (Mul (IntDouble (IdVar "x")) (Const (CDouble 39.42)))] [Atrib "y" (Mul (IntDouble (IdVar "x")) (Const (CDouble 53.234)))],Ret (Just (IdVar "y"))])] ["x" :#: (TInt,0),"y" :#: (TInt,0),"f" :#: (TInt,0),"g" :#: (TInt,0),"aferss" :#: (TDouble,0),"z" :#: (TString,0)] [Atrib "z" (Lit "abc"),Atrib "g" (Chamada "fun" [IdVar "x",IdVar "y"]),Atrib "f" (Div (Mul (IdVar "x") (IdVar "y")) (Chamada "fun" [IdVar "g",IdVar "x"])),If (Rel (Rgt (IdVar "f") (Const (CInt 2)))) [Atrib "f" (Add (IdVar "f") (Const (CInt 1)))] [While (Rel (Rge (IdVar "y") (Const (CInt 0)))) [Atrib "f" (Chamada "opa" [IdVar "z",Mul (IdVar "f") (Const (CInt 3))]),Atrib "y" (Sub (IdVar "y") (Const (CInt 1)))]],Atrib "affers" (Sub (Mul (Add (IdVar "f") (Div (IdVar "g") (IdVar "y"))) (Const (CInt 34))) (Mul (IdVar "x") (IdVar "f"))),Imp (IdVar "affers"),Leitura "x"]
